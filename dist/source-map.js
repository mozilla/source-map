!function(A,I){"object"==typeof exports&&"object"==typeof module?module.exports=I():"function"==typeof define&&define.amd?define([],I):"object"==typeof exports?exports.sourceMap=I():A.sourceMap=I()}(this,function(){return function(A){var I={};function g(Q){if(I[Q])return I[Q].exports;var B=I[Q]={i:Q,l:!1,exports:{}};return A[Q].call(B.exports,B,B.exports,g),B.l=!0,B.exports}return g.m=A,g.c=I,g.d=function(A,I,Q){g.o(A,I)||Object.defineProperty(A,I,{enumerable:!0,get:Q})},g.r=function(A){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(A,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(A,"__esModule",{value:!0})},g.t=function(A,I){if(1&I&&(A=g(A)),8&I)return A;if(4&I&&"object"==typeof A&&A&&A.__esModule)return A;var Q=Object.create(null);if(g.r(Q),Object.defineProperty(Q,"default",{enumerable:!0,value:A}),2&I&&"string"!=typeof A)for(var B in A)g.d(Q,B,function(I){return A[I]}.bind(null,B));return Q},g.n=function(A){var I=A&&A.__esModule?function(){return A.default}:function(){return A};return g.d(I,"a",I),I},g.o=function(A,I){return Object.prototype.hasOwnProperty.call(A,I)},g.p="",g(g.s=4)}([function(A,I){I.getArg=function(A,I,g){if(I in A)return A[I];if(3===arguments.length)return g;throw new Error('"'+I+'" is a required argument.')};const g=/^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.-]*)(?::(\d+))?(.*)$/,Q=/^data:.+\,.+$/;function B(A){const I=A.match(g);return I?{scheme:I[1],auth:I[2],host:I[3],port:I[4],path:I[5]}:null}function C(A){let I="";return A.scheme&&(I+=A.scheme+":"),I+="//",A.auth&&(I+=A.auth+"@"),A.host&&(I+=A.host),A.port&&(I+=":"+A.port),A.path&&(I+=A.path),I}I.urlParse=B,I.urlGenerate=C;const E=32;const i=function(A){const I=[];return function(g){for(let A=0;A<I.length;A++)if(I[A].input===g){const g=I[0];return I[0]=I[A],I[A]=g,I[0].result}const Q=A(g);return I.unshift({input:g,result:Q}),I.length>E&&I.pop(),Q}}(function(A){let g=A;const Q=B(A);if(Q){if(!Q.path)return A;g=Q.path}const E=I.isAbsolute(g),i=[];let o=0,e=0;for(;;){if(o=e,-1===(e=g.indexOf("/",o))){i.push(g.slice(o));break}for(i.push(g.slice(o,e));e<g.length&&"/"===g[e];)e++}let n=0;for(e=i.length-1;e>=0;e--){const A=i[e];"."===A?i.splice(e,1):".."===A?n++:n>0&&(""===A?(i.splice(e+1,n),n=0):(i.splice(e,2),n--))}return""===(g=i.join("/"))&&(g=E?"/":"."),Q?(Q.path=g,C(Q)):g});function o(A,I){""===A&&(A="."),""===I&&(I=".");const g=B(I),E=B(A);if(E&&(A=E.path||"/"),g&&!g.scheme)return E&&(g.scheme=E.scheme),C(g);if(g||I.match(Q))return I;if(E&&!E.host&&!E.path)return E.host=I,C(E);const o="/"===I.charAt(0)?I:i(A.replace(/\/+$/,"")+"/"+I);return E?(E.path=o,C(E)):o}I.normalize=i,I.join=o,I.isAbsolute=function(A){return"/"===A.charAt(0)||g.test(A)},I.relative=function(A,I){""===A&&(A="."),A=A.replace(/\/$/,"");let g=0;for(;0!==I.indexOf(A+"/");){const Q=A.lastIndexOf("/");if(Q<0)return I;if((A=A.slice(0,Q)).match(/^([^\/]+:\/)?\/*$/))return I;++g}return Array(g+1).join("../")+I.substr(A.length+1)};const e=!("__proto__"in Object.create(null));function n(A){return A}function s(A){if(!A)return!1;const I=A.length;if(I<9)return!1;if(95!==A.charCodeAt(I-1)||95!==A.charCodeAt(I-2)||111!==A.charCodeAt(I-3)||116!==A.charCodeAt(I-4)||111!==A.charCodeAt(I-5)||114!==A.charCodeAt(I-6)||112!==A.charCodeAt(I-7)||95!==A.charCodeAt(I-8)||95!==A.charCodeAt(I-9))return!1;for(let g=I-10;g>=0;g--)if(36!==A.charCodeAt(g))return!1;return!0}function t(A,I){return A===I?0:null===A?1:null===I?-1:A>I?1:-1}I.toSetString=e?n:function(A){return s(A)?"$"+A:A},I.fromSetString=e?n:function(A){return s(A)?A.slice(1):A},I.compareByOriginalPositions=function(A,I,g){let Q=t(A.source,I.source);return 0!==Q?Q:0!=(Q=A.originalLine-I.originalLine)?Q:0!=(Q=A.originalColumn-I.originalColumn)||g?Q:0!=(Q=A.generatedColumn-I.generatedColumn)?Q:0!=(Q=A.generatedLine-I.generatedLine)?Q:t(A.name,I.name)},I.compareByGeneratedPositionsDeflated=function(A,I,g){let Q=A.generatedLine-I.generatedLine;return 0!==Q?Q:0!=(Q=A.generatedColumn-I.generatedColumn)||g?Q:0!==(Q=t(A.source,I.source))?Q:0!=(Q=A.originalLine-I.originalLine)?Q:0!=(Q=A.originalColumn-I.originalColumn)?Q:t(A.name,I.name)},I.compareByGeneratedPositionsInflated=function(A,I){let g=A.generatedLine-I.generatedLine;return 0!==g?g:0!=(g=A.generatedColumn-I.generatedColumn)?g:0!==(g=t(A.source,I.source))?g:0!=(g=A.originalLine-I.originalLine)?g:0!=(g=A.originalColumn-I.originalColumn)?g:t(A.name,I.name)},I.parseSourceMapInput=function(A){return JSON.parse(A.replace(/^\)]}'[^\n]*\n/,""))},I.computeSourceURL=function(A,I,g){if(I=I||"",A&&("/"!==A[A.length-1]&&"/"!==I[0]&&(A+="/"),I=A+I),g){const A=B(g);if(!A)throw new Error("sourceMapURL could not be parsed");if(A.path){const I=A.path.lastIndexOf("/");I>=0&&(A.path=A.path.substring(0,I+1))}I=o(C(A),I)}return i(I)}},function(A,I,g){const Q=g(2),B=g(0),C=g(3).ArraySet,E=g(6).MappingList;class i{constructor(A){A||(A={}),this._file=B.getArg(A,"file",null),this._sourceRoot=B.getArg(A,"sourceRoot",null),this._skipValidation=B.getArg(A,"skipValidation",!1),this._sources=new C,this._names=new C,this._mappings=new E,this._sourcesContents=null}static fromSourceMap(A){const I=A.sourceRoot,g=new i({file:A.file,sourceRoot:I});return A.eachMapping(function(A){const Q={generated:{line:A.generatedLine,column:A.generatedColumn}};null!=A.source&&(Q.source=A.source,null!=I&&(Q.source=B.relative(I,Q.source)),Q.original={line:A.originalLine,column:A.originalColumn},null!=A.name&&(Q.name=A.name)),g.addMapping(Q)}),A.sources.forEach(function(Q){let C=Q;null!==I&&(C=B.relative(I,Q)),g._sources.has(C)||g._sources.add(C);const E=A.sourceContentFor(Q);null!=E&&g.setSourceContent(Q,E)}),g}addMapping(A){const I=B.getArg(A,"generated"),g=B.getArg(A,"original",null);let Q=B.getArg(A,"source",null),C=B.getArg(A,"name",null);this._skipValidation||this._validateMapping(I,g,Q,C),null!=Q&&(Q=String(Q),this._sources.has(Q)||this._sources.add(Q)),null!=C&&(C=String(C),this._names.has(C)||this._names.add(C)),this._mappings.add({generatedLine:I.line,generatedColumn:I.column,originalLine:null!=g&&g.line,originalColumn:null!=g&&g.column,source:Q,name:C})}setSourceContent(A,I){let g=A;null!=this._sourceRoot&&(g=B.relative(this._sourceRoot,g)),null!=I?(this._sourcesContents||(this._sourcesContents=Object.create(null)),this._sourcesContents[B.toSetString(g)]=I):this._sourcesContents&&(delete this._sourcesContents[B.toSetString(g)],0===Object.keys(this._sourcesContents).length&&(this._sourcesContents=null))}applySourceMap(A,I,g){let Q=I;if(null==I){if(null==A.file)throw new Error('SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, or the source map\'s "file" property. Both were omitted.');Q=A.file}const E=this._sourceRoot;null!=E&&(Q=B.relative(E,Q));const i=this._mappings.toArray().length>0?new C:this._sources,o=new C;this._mappings.unsortedForEach(function(I){if(I.source===Q&&null!=I.originalLine){const Q=A.originalPositionFor({line:I.originalLine,column:I.originalColumn});null!=Q.source&&(I.source=Q.source,null!=g&&(I.source=B.join(g,I.source)),null!=E&&(I.source=B.relative(E,I.source)),I.originalLine=Q.line,I.originalColumn=Q.column,null!=Q.name&&(I.name=Q.name))}const C=I.source;null==C||i.has(C)||i.add(C);const e=I.name;null==e||o.has(e)||o.add(e)},this),this._sources=i,this._names=o,A.sources.forEach(function(I){const Q=A.sourceContentFor(I);null!=Q&&(null!=g&&(I=B.join(g,I)),null!=E&&(I=B.relative(E,I)),this.setSourceContent(I,Q))},this)}_validateMapping(A,I,g,Q){if(I&&"number"!=typeof I.line&&"number"!=typeof I.column)throw new Error("original.line and original.column are not numbers -- you probably meant to omit the original mapping entirely and only map the generated position. If so, pass null for the original mapping instead of an object with empty or null values.");if(A&&"line"in A&&"column"in A&&A.line>0&&A.column>=0&&!I&&!g&&!Q);else if(!(A&&"line"in A&&"column"in A&&I&&"line"in I&&"column"in I&&A.line>0&&A.column>=0&&I.line>0&&I.column>=0&&g))throw new Error("Invalid mapping: "+JSON.stringify({generated:A,source:g,original:I,name:Q}))}_serializeMappings(){let A,I,g,C,E=0,i=1,o=0,e=0,n=0,s=0,t="";const a=this._mappings.toArray();for(let D=0,r=a.length;D<r;D++){if(A="",(I=a[D]).generatedLine!==i)for(E=0;I.generatedLine!==i;)A+=";",i++;else if(D>0){if(!B.compareByGeneratedPositionsInflated(I,a[D-1]))continue;A+=","}A+=Q.encode(I.generatedColumn-E),E=I.generatedColumn,null!=I.source&&(C=this._sources.indexOf(I.source),A+=Q.encode(C-s),s=C,A+=Q.encode(I.originalLine-1-e),e=I.originalLine-1,A+=Q.encode(I.originalColumn-o),o=I.originalColumn,null!=I.name&&(g=this._names.indexOf(I.name),A+=Q.encode(g-n),n=g)),t+=A}return t}_generateSourcesContent(A,I){return A.map(function(A){if(!this._sourcesContents)return null;null!=I&&(A=B.relative(I,A));const g=B.toSetString(A);return Object.prototype.hasOwnProperty.call(this._sourcesContents,g)?this._sourcesContents[g]:null},this)}toJSON(){const A={version:this._version,sources:this._sources.toArray(),names:this._names.toArray(),mappings:this._serializeMappings()};return null!=this._file&&(A.file=this._file),null!=this._sourceRoot&&(A.sourceRoot=this._sourceRoot),this._sourcesContents&&(A.sourcesContent=this._generateSourcesContent(A.sources,A.sourceRoot)),A}toString(){return JSON.stringify(this.toJSON())}}i.prototype._version=3,I.SourceMapGenerator=i},function(A,I,g){const Q=g(5);I.encode=function(A){let I,g="",B=function(A){return A<0?1+(-A<<1):0+(A<<1)}(A);do{I=31&B,(B>>>=5)>0&&(I|=32),g+=Q.encode(I)}while(B>0);return g}},function(A,I){class g{constructor(){this._array=[],this._set=new Map}static fromArray(A,I){const Q=new g;for(let g=0,B=A.length;g<B;g++)Q.add(A[g],I);return Q}size(){return this._set.size}add(A,I){const g=this.has(A),Q=this._array.length;g&&!I||this._array.push(A),g||this._set.set(A,Q)}has(A){return this._set.has(A)}indexOf(A){const I=this._set.get(A);if(I>=0)return I;throw new Error('"'+A+'" is not in the set.')}at(A){if(A>=0&&A<this._array.length)return this._array[A];throw new Error("No element indexed by "+A)}toArray(){return this._array.slice()}}I.ArraySet=g},function(A,I,g){I.SourceMapGenerator=g(1).SourceMapGenerator,I.SourceMapConsumer=g(7).SourceMapConsumer,I.SourceNode=g(12).SourceNode},function(A,I){const g="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split("");I.encode=function(A){if(0<=A&&A<g.length)return g[A];throw new TypeError("Must be between 0 and 63: "+A)}},function(A,I,g){const Q=g(0);I.MappingList=class{constructor(){this._array=[],this._sorted=!0,this._last={generatedLine:-1,generatedColumn:0}}unsortedForEach(A,I){this._array.forEach(A,I)}add(A){!function(A,I){const g=A.generatedLine,B=I.generatedLine,C=A.generatedColumn,E=I.generatedColumn;return B>g||B==g&&E>=C||Q.compareByGeneratedPositionsInflated(A,I)<=0}(this._last,A)?(this._sorted=!1,this._array.push(A)):(this._last=A,this._array.push(A))}toArray(){return this._sorted||(this._array.sort(Q.compareByGeneratedPositionsInflated),this._sorted=!0),this._array}}},function(A,I,g){const Q=g(0),B=g(8),C=g(3).ArraySet,E=(g(2),g(9)),i=Symbol("smcInternal");class o{constructor(A,I){return A==i?Promise.resolve(this):function(A,I){let g=A;"string"==typeof A&&(g=Q.parseSourceMapInput(A));const B=null!=g.sections?new n(g,I):new e(g,I);return Promise.resolve(B)}(A,I)}static initialize(A){}static fromSourceMap(A,I){return function(A,I){return e.fromSourceMap(A,I)}(A,I)}static async with(A,I,g){const Q=await new o(A,I);try{return await g(Q)}finally{Q.destroy()}}_parseMappings(A,I){throw new Error("Subclasses must implement _parseMappings")}eachMapping(A,I,g){throw new Error("Subclasses must implement eachMapping")}allGeneratedPositionsFor(A){throw new Error("Subclasses must implement allGeneratedPositionsFor")}destroy(){throw new Error("Subclasses must implement destroy")}}o.prototype._version=3,o.GENERATED_ORDER=1,o.ORIGINAL_ORDER=2,o.GREATEST_LOWER_BOUND=1,o.LEAST_UPPER_BOUND=2,I.SourceMapConsumer=o;class e extends o{constructor(A,I){return super(i).then(g=>{let B=A;"string"==typeof A&&(B=Q.parseSourceMapInput(A));const i=Q.getArg(B,"version");let o=Q.getArg(B,"sources");const e=Q.getArg(B,"names",[]);let n=Q.getArg(B,"sourceRoot",null);const s=Q.getArg(B,"sourcesContent",null),t=Q.getArg(B,"mappings"),a=Q.getArg(B,"file",null);if(i!=g._version)throw new Error("Unsupported version: "+i);return n&&(n=Q.normalize(n)),o=o.map(String).map(Q.normalize).map(function(A){return n&&Q.isAbsolute(n)&&Q.isAbsolute(A)?Q.relative(n,A):A}),g._names=C.fromArray(e.map(String),!0),g._sources=C.fromArray(o,!0),g._absoluteSources=g._sources.toArray().map(function(A){return Q.computeSourceURL(n,A,I)}),g.sourceRoot=n,g.sourcesContent=s,g._mappings=t,g._sourceMapURL=I,g.file=a,g._computedColumnSpans=!1,g._mappingsPtr=0,g._wasm=null,E().then(A=>(g._wasm=A,g))})}_findSourceIndex(A){let I=A;if(null!=this.sourceRoot&&(I=Q.relative(this.sourceRoot,I)),this._sources.has(I))return this._sources.indexOf(I);for(let I=0;I<this._absoluteSources.length;++I)if(this._absoluteSources[I]==A)return I;return-1}static fromSourceMap(A,I){return new e(A.toString())}get sources(){return this._absoluteSources.slice()}_getMappingsPtr(){return 0===this._mappingsPtr&&this._parseMappings(this._mappings,this.sourceRoot),this._mappingsPtr}_parseMappings(A,I){const g=A.length,Q=this._wasm.exports.allocate_mappings(g),B=new Uint8Array(this._wasm.exports.memory.buffer,Q,g);for(let I=0;I<g;I++)B[I]=A.charCodeAt(I);const C=this._wasm.exports.parse_mappings(Q);if(!C){const A=this._wasm.exports.get_last_error();let I=`Error parsing mappings (code ${A}): `;switch(A){case 1:I+="the mappings contained a negative line, column, source index, or name index";break;case 2:I+="the mappings contained a number larger than 2**32";break;case 3:I+="reached EOF while in the middle of parsing a VLQ";break;case 4:I+="invalid base 64 character while parsing a VLQ";break;default:I+="unknown error code"}throw new Error(I)}this._mappingsPtr=C}eachMapping(A,I,g){const B=I||null,C=g||o.GENERATED_ORDER,E=this.sourceRoot;this._wasm.withMappingCallback(I=>{null!==I.source&&(I.source=this._sources.at(I.source),I.source=Q.computeSourceURL(E,I.source,this._sourceMapURL),null!==I.name&&(I.name=this._names.at(I.name))),A.call(B,I)},()=>{switch(C){case o.GENERATED_ORDER:this._wasm.exports.by_generated_location(this._getMappingsPtr());break;case o.ORIGINAL_ORDER:this._wasm.exports.by_original_location(this._getMappingsPtr());break;default:throw new Error("Unknown order of iteration.")}})}allGeneratedPositionsFor(A){let I=Q.getArg(A,"source");const g=Q.getArg(A,"line"),B=A.column||0;if((I=this._findSourceIndex(I))<0)return[];if(g<1)throw new Error("Line numbers must be >= 1");if(B<0)throw new Error("Column numbers must be >= 0");const C=[];return this._wasm.withMappingCallback(A=>{let I=A.lastGeneratedColumn;this._computedColumnSpans&&null===I&&(I=1/0),C.push({line:A.generatedLine,column:A.generatedColumn,lastColumn:I})},()=>{this._wasm.exports.all_generated_locations_for(this._getMappingsPtr(),I,g-1,"column"in A,B)}),C}destroy(){0!==this._mappingsPtr&&(this._wasm.exports.free_mappings(this._mappingsPtr),this._mappingsPtr=0)}computeColumnSpans(){this._computedColumnSpans||(this._wasm.exports.compute_column_spans(this._getMappingsPtr()),this._computedColumnSpans=!0)}originalPositionFor(A){const I={generatedLine:Q.getArg(A,"line"),generatedColumn:Q.getArg(A,"column")};if(I.generatedLine<1)throw new Error("Line numbers must be >= 1");if(I.generatedColumn<0)throw new Error("Column numbers must be >= 0");let g,B=Q.getArg(A,"bias",o.GREATEST_LOWER_BOUND);if(null==B&&(B=o.GREATEST_LOWER_BOUND),this._wasm.withMappingCallback(A=>g=A,()=>{this._wasm.exports.original_location_for(this._getMappingsPtr(),I.generatedLine-1,I.generatedColumn,B)}),g&&g.generatedLine===I.generatedLine){let A=Q.getArg(g,"source",null);null!==A&&(A=this._sources.at(A),A=Q.computeSourceURL(this.sourceRoot,A,this._sourceMapURL));let I=Q.getArg(g,"name",null);return null!==I&&(I=this._names.at(I)),{source:A,line:Q.getArg(g,"originalLine",null),column:Q.getArg(g,"originalColumn",null),name:I}}return{source:null,line:null,column:null,name:null}}hasContentsOfAllSources(){return!!this.sourcesContent&&(this.sourcesContent.length>=this._sources.size()&&!this.sourcesContent.some(function(A){return null==A}))}sourceContentFor(A,I){if(!this.sourcesContent)return null;const g=this._findSourceIndex(A);if(g>=0)return this.sourcesContent[g];let B,C=A;if(null!=this.sourceRoot&&(C=Q.relative(this.sourceRoot,C)),null!=this.sourceRoot&&(B=Q.urlParse(this.sourceRoot))){const A=C.replace(/^file:\/\//,"");if("file"==B.scheme&&this._sources.has(A))return this.sourcesContent[this._sources.indexOf(A)];if((!B.path||"/"==B.path)&&this._sources.has("/"+C))return this.sourcesContent[this._sources.indexOf("/"+C)]}if(I)return null;throw new Error('"'+C+'" is not in the SourceMap.')}generatedPositionFor(A){let I=Q.getArg(A,"source");if((I=this._findSourceIndex(I))<0)return{line:null,column:null,lastColumn:null};const g={source:I,originalLine:Q.getArg(A,"line"),originalColumn:Q.getArg(A,"column")};if(g.originalLine<1)throw new Error("Line numbers must be >= 1");if(g.originalColumn<0)throw new Error("Column numbers must be >= 0");let B,C=Q.getArg(A,"bias",o.GREATEST_LOWER_BOUND);if(null==C&&(C=o.GREATEST_LOWER_BOUND),this._wasm.withMappingCallback(A=>B=A,()=>{this._wasm.exports.generated_location_for(this._getMappingsPtr(),g.source,g.originalLine-1,g.originalColumn,C)}),B&&B.source===g.source){let A=B.lastGeneratedColumn;return this._computedColumnSpans&&null===A&&(A=1/0),{line:Q.getArg(B,"generatedLine",null),column:Q.getArg(B,"generatedColumn",null),lastColumn:A}}return{line:null,column:null,lastColumn:null}}}e.prototype.consumer=o,I.BasicSourceMapConsumer=e;class n extends o{constructor(A,I){return super(i).then(g=>{let B=A;"string"==typeof A&&(B=Q.parseSourceMapInput(A));const E=Q.getArg(B,"version"),i=Q.getArg(B,"sections");if(E!=g._version)throw new Error("Unsupported version: "+E);g._sources=new C,g._names=new C,g.__generatedMappings=null,g.__originalMappings=null,g.__generatedMappingsUnsorted=null,g.__originalMappingsUnsorted=null;let e={line:-1,column:0};return Promise.all(i.map(A=>{if(A.url)throw new Error("Support for url field in sections not implemented.");const g=Q.getArg(A,"offset"),B=Q.getArg(g,"line"),C=Q.getArg(g,"column");if(B<e.line||B===e.line&&C<e.column)throw new Error("Section offsets must be ordered and non-overlapping.");return e=g,new o(Q.getArg(A,"map"),I).then(A=>({generatedOffset:{generatedLine:B+1,generatedColumn:C+1},consumer:A}))})).then(A=>(g._sections=A,g))})}get _generatedMappings(){return this.__generatedMappings||this._sortGeneratedMappings(),this.__generatedMappings}get _originalMappings(){return this.__originalMappings||this._sortOriginalMappings(),this.__originalMappings}get _generatedMappingsUnsorted(){return this.__generatedMappingsUnsorted||this._parseMappings(this._mappings,this.sourceRoot),this.__generatedMappingsUnsorted}get _originalMappingsUnsorted(){return this.__originalMappingsUnsorted||this._parseMappings(this._mappings,this.sourceRoot),this.__originalMappingsUnsorted}_sortGeneratedMappings(){const A=this._generatedMappingsUnsorted;A.sort(Q.compareByGeneratedPositionsDeflated),this.__generatedMappings=A}_sortOriginalMappings(){const A=this._originalMappingsUnsorted;A.sort(Q.compareByOriginalPositions),this.__originalMappings=A}get sources(){const A=[];for(let I=0;I<this._sections.length;I++)for(let g=0;g<this._sections[I].consumer.sources.length;g++)A.push(this._sections[I].consumer.sources[g]);return A}originalPositionFor(A){const I={generatedLine:Q.getArg(A,"line"),generatedColumn:Q.getArg(A,"column")},g=B.search(I,this._sections,function(A,I){const g=A.generatedLine-I.generatedOffset.generatedLine;return g||A.generatedColumn-I.generatedOffset.generatedColumn}),C=this._sections[g];return C?C.consumer.originalPositionFor({line:I.generatedLine-(C.generatedOffset.generatedLine-1),column:I.generatedColumn-(C.generatedOffset.generatedLine===I.generatedLine?C.generatedOffset.generatedColumn-1:0),bias:A.bias}):{source:null,line:null,column:null,name:null}}hasContentsOfAllSources(){return this._sections.every(function(A){return A.consumer.hasContentsOfAllSources()})}sourceContentFor(A,I){for(let I=0;I<this._sections.length;I++){const g=this._sections[I].consumer.sourceContentFor(A,!0);if(g)return g}if(I)return null;throw new Error('"'+A+'" is not in the SourceMap.')}generatedPositionFor(A){for(let I=0;I<this._sections.length;I++){const g=this._sections[I];if(-1===g.consumer._findSourceIndex(Q.getArg(A,"source")))continue;const B=g.consumer.generatedPositionFor(A);if(B){return{line:B.line+(g.generatedOffset.generatedLine-1),column:B.column+(g.generatedOffset.generatedLine===B.line?g.generatedOffset.generatedColumn-1:0)}}}return{line:null,column:null}}_parseMappings(A,I){const g=this.__generatedMappingsUnsorted=[],B=this.__originalMappingsUnsorted=[];for(let A=0;A<this._sections.length;A++){const I=this._sections[A],C=[];I.consumer.eachMapping(A=>C.push(A));for(let A=0;A<C.length;A++){const E=C[A];let i=Q.computeSourceURL(I.consumer.sourceRoot,null,this._sourceMapURL);this._sources.add(i),i=this._sources.indexOf(i);let o=null;E.name&&(this._names.add(E.name),o=this._names.indexOf(E.name));const e={source:i,generatedLine:E.generatedLine+(I.generatedOffset.generatedLine-1),generatedColumn:E.generatedColumn+(I.generatedOffset.generatedLine===E.generatedLine?I.generatedOffset.generatedColumn-1:0),originalLine:E.originalLine,originalColumn:E.originalColumn,name:o};g.push(e),"number"==typeof e.originalLine&&B.push(e)}}}eachMapping(A,I,g){const B=I||null;let C;switch(g||o.GENERATED_ORDER){case o.GENERATED_ORDER:C=this._generatedMappings;break;case o.ORIGINAL_ORDER:C=this._originalMappings;break;default:throw new Error("Unknown order of iteration.")}const E=this.sourceRoot;C.map(function(A){let I=null;return null!==A.source&&(I=this._sources.at(A.source),I=Q.computeSourceURL(E,I,this._sourceMapURL)),{source:I,generatedLine:A.generatedLine,generatedColumn:A.generatedColumn,originalLine:A.originalLine,originalColumn:A.originalColumn,name:null===A.name?null:this._names.at(A.name)}},this).forEach(A,B)}_findMapping(A,I,g,Q,C,E){if(A[g]<=0)throw new TypeError("Line must be greater than or equal to 1, got "+A[g]);if(A[Q]<0)throw new TypeError("Column must be greater than or equal to 0, got "+A[Q]);return B.search(A,I,C,E)}allGeneratedPositionsFor(A){const I=Q.getArg(A,"line"),g={source:Q.getArg(A,"source"),originalLine:I,originalColumn:Q.getArg(A,"column",0)};if(g.source=this._findSourceIndex(g.source),g.source<0)return[];if(g.originalLine<1)throw new Error("Line numbers must be >= 1");if(g.originalColumn<0)throw new Error("Column numbers must be >= 0");const C=[];let E=this._findMapping(g,this._originalMappings,"originalLine","originalColumn",Q.compareByOriginalPositions,B.LEAST_UPPER_BOUND);if(E>=0){let g=this._originalMappings[E];if(void 0===A.column){const A=g.originalLine;for(;g&&g.originalLine===A;){let A=g.lastGeneratedColumn;this._computedColumnSpans&&null===A&&(A=1/0),C.push({line:Q.getArg(g,"generatedLine",null),column:Q.getArg(g,"generatedColumn",null),lastColumn:A}),g=this._originalMappings[++E]}}else{const A=g.originalColumn;for(;g&&g.originalLine===I&&g.originalColumn==A;){let A=g.lastGeneratedColumn;this._computedColumnSpans&&null===A&&(A=1/0),C.push({line:Q.getArg(g,"generatedLine",null),column:Q.getArg(g,"generatedColumn",null),lastColumn:A}),g=this._originalMappings[++E]}}}return C}destroy(){for(let A=0;A<this._sections.length;A++)this._sections[A].consumer.destroy()}}I.IndexedSourceMapConsumer=n},function(A,I){I.GREATEST_LOWER_BOUND=1,I.LEAST_UPPER_BOUND=2,I.search=function(A,g,Q,B){if(0===g.length)return-1;let C=function A(g,Q,B,C,E,i){const o=Math.floor((Q-g)/2)+g,e=E(B,C[o],!0);return 0===e?o:e>0?Q-o>1?A(o,Q,B,C,E,i):i==I.LEAST_UPPER_BOUND?Q<C.length?Q:-1:o:o-g>1?A(g,o,B,C,E,i):i==I.LEAST_UPPER_BOUND?o:g<0?-1:g}(-1,g.length,A,g,Q,B||I.GREATEST_LOWER_BOUND);if(C<0)return-1;for(;C-1>=0&&0===Q(g[C],g[C-1],!0);)--C;return C}},function(A,I,g){const Q=g(10);let B=null;A.exports=function(){if(B)return B;const A=[];return B=Q().then(I=>WebAssembly.instantiate(I,{env:{mapping_callback(I,g,Q,B,C,E,i,o,e,n){const s=new function(){this.generatedLine=0,this.generatedColumn=0,this.lastGeneratedColumn=null,this.source=null,this.originalLine=null,this.originalColumn=null,this.name=null};s.generatedLine=I+1,s.generatedColumn=g,Q&&(s.lastGeneratedColumn=B-1),C&&(s.source=E,s.originalLine=i+1,s.originalColumn=o,e&&(s.name=n)),A[A.length-1](s)},start_all_generated_locations_for(){console.time("all_generated_locations_for")},end_all_generated_locations_for(){console.timeEnd("all_generated_locations_for")},start_compute_column_spans(){console.time("compute_column_spans")},end_compute_column_spans(){console.timeEnd("compute_column_spans")},start_generated_location_for(){console.time("generated_location_for")},end_generated_location_for(){console.timeEnd("generated_location_for")},start_original_location_for(){console.time("original_location_for")},end_original_location_for(){console.timeEnd("original_location_for")},start_parse_mappings(){console.time("parse_mappings")},end_parse_mappings(){console.timeEnd("parse_mappings")},start_sort_by_generated_location(){console.time("sort_by_generated_location")},end_sort_by_generated_location(){console.timeEnd("sort_by_generated_location")},start_sort_by_original_location(){console.time("sort_by_original_location")},end_sort_by_original_location(){console.timeEnd("sort_by_original_location")}}})).then(I=>({exports:I.instance.exports,withMappingCallback:(I,g)=>{A.push(I);try{g()}finally{A.pop()}}})).then(null,A=>{throw B=null,A})}},function(A,I,g){const Q=g(11);A.exports=function(){const A=atob(Q),I=new Uint8Array(A.length);for(let g=0;g<I.length;++g)I[g]=A.charCodeAt(g);return Promise.resolve(I.buffer)}},function(A,I){A.exports=""},function(A,I,g){const Q=g(1).SourceMapGenerator,B=g(0),C=/(\r?\n)/,E=10,i="$$$isSourceNode$$$";class o{constructor(A,I,g,Q,B){this.children=[],this.sourceContents={},this.line=null==A?null:A,this.column=null==I?null:I,this.source=null==g?null:g,this.name=null==B?null:B,this[i]=!0,null!=Q&&this.add(Q)}static fromStringWithSourceMap(A,I,g){const Q=new o,E=A.split(C);let i=0;const e=function(){return A()+(A()||"");function A(){return i<E.length?E[i++]:void 0}};let n,s=1,t=0,a=null;return I.eachMapping(function(A){if(null!==a){if(!(s<A.generatedLine)){const I=(n=E[i]||"").substr(0,A.generatedColumn-t);return E[i]=n.substr(A.generatedColumn-t),t=A.generatedColumn,D(a,I),void(a=A)}D(a,e()),s++,t=0}for(;s<A.generatedLine;)Q.add(e()),s++;t<A.generatedColumn&&(n=E[i]||"",Q.add(n.substr(0,A.generatedColumn)),E[i]=n.substr(A.generatedColumn),t=A.generatedColumn),a=A},this),i<E.length&&(a&&D(a,e()),Q.add(E.splice(i).join(""))),I.sources.forEach(function(A){const C=I.sourceContentFor(A);null!=C&&(null!=g&&(A=B.join(g,A)),Q.setSourceContent(A,C))}),Q;function D(A,I){if(null===A||void 0===A.source)Q.add(I);else{const C=g?B.join(g,A.source):A.source;Q.add(new o(A.originalLine,A.originalColumn,C,I,A.name))}}}add(A){if(Array.isArray(A))A.forEach(function(A){this.add(A)},this);else{if(!A[i]&&"string"!=typeof A)throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got "+A);A&&this.children.push(A)}return this}prepend(A){if(Array.isArray(A))for(let I=A.length-1;I>=0;I--)this.prepend(A[I]);else{if(!A[i]&&"string"!=typeof A)throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got "+A);this.children.unshift(A)}return this}walk(A){let I;for(let g=0,Q=this.children.length;g<Q;g++)(I=this.children[g])[i]?I.walk(A):""!==I&&A(I,{source:this.source,line:this.line,column:this.column,name:this.name})}join(A){let I,g;const Q=this.children.length;if(Q>0){for(I=[],g=0;g<Q-1;g++)I.push(this.children[g]),I.push(A);I.push(this.children[g]),this.children=I}return this}replaceRight(A,I){const g=this.children[this.children.length-1];return g[i]?g.replaceRight(A,I):"string"==typeof g?this.children[this.children.length-1]=g.replace(A,I):this.children.push("".replace(A,I)),this}setSourceContent(A,I){this.sourceContents[B.toSetString(A)]=I}walkSourceContents(A){for(let I=0,g=this.children.length;I<g;I++)this.children[I][i]&&this.children[I].walkSourceContents(A);const I=Object.keys(this.sourceContents);for(let g=0,Q=I.length;g<Q;g++)A(B.fromSetString(I[g]),this.sourceContents[I[g]])}toString(){let A="";return this.walk(function(I){A+=I}),A}toStringWithSourceMap(A){const I={code:"",line:1,column:0},g=new Q(A);let B=!1,C=null,i=null,o=null,e=null;return this.walk(function(A,Q){I.code+=A,null!==Q.source&&null!==Q.line&&null!==Q.column?(C===Q.source&&i===Q.line&&o===Q.column&&e===Q.name||g.addMapping({source:Q.source,original:{line:Q.line,column:Q.column},generated:{line:I.line,column:I.column},name:Q.name}),C=Q.source,i=Q.line,o=Q.column,e=Q.name,B=!0):B&&(g.addMapping({generated:{line:I.line,column:I.column}}),C=null,B=!1);for(let i=0,o=A.length;i<o;i++)A.charCodeAt(i)===E?(I.line++,I.column=0,i+1===o?(C=null,B=!1):B&&g.addMapping({source:Q.source,original:{line:Q.line,column:Q.column},generated:{line:I.line,column:I.column},name:Q.name})):I.column++}),this.walkSourceContents(function(A,I){g.setSourceContent(A,I)}),{code:I.code,map:g}}}I.SourceNode=o}])});