/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */
define(function (require, exports, module) {

  var SourceMapFileCollector = require('source-map/source-map-file-collector').SourceMapFileCollector;
  var SourceMapGenerator = require('source-map/source-map-generator').SourceMapGenerator;

  // Generate test data for mapping
  var input = [
        '// First line comment',
        'var test = {',
        '  a: "b"',
        '};'
      ].join('\n'),
      output = 'var test={a:"b"};',
      srcFile = 'input.js',
      // Generated by node-jsmin2
      coordmap = {"21":0,"22":1,"23":2,"24":3,"25":4,"26":5,"27":6,"28":7,"29":8,"31":9,"33":10,"37":11,"38":12,"40":13,"41":14,"42":15,"44":16,"45":17},
      // Generated by hand ;_;
      propmap = [{
        generated: {'line': 1, 'column': 0}, // v
        original:  {'line': 2, 'column': 0},
        source: srcFile
      }, {
        generated: {'line': 1, 'column': 1}, // a
        original:  {'line': 2, 'column': 1},
        source: srcFile
      }, {
        generated: {'line': 1, 'column': 2}, // r
        original:  {'line': 2, 'column': 2},
        source: srcFile
      }, {
        generated: {'line': 1, 'column': 3}, //
        original:  {'line': 2, 'column': 3},
        source: srcFile
      }, {
        generated: {'line': 1, 'column': 4}, // t
        original:  {'line': 2, 'column': 4},
        source: srcFile
      }, {
        generated: {'line': 1, 'column': 5}, // e
        original:  {'line': 2, 'column': 5},
        source: srcFile
      }, {
        generated: {'line': 1, 'column': 6}, // s
        original:  {'line': 2, 'column': 6},
        source: srcFile
      }, {
        generated: {'line': 1, 'column': 7}, // t
        original:  {'line': 2, 'column': 7},
        source: srcFile
      }, {
        generated: {'line': 1, 'column': 8}, // =
        original:  {'line': 2, 'column': 9},
        source: srcFile
      }, {
        generated: {'line': 1, 'column': 9}, // {
        original:  {'line': 2, 'column': 11},
        source: srcFile
      }, {
        generated: {'line': 1, 'column': 10}, // a
        original:  {'line': 3, 'column': 2},
        source: srcFile
      }, {
        generated: {'line': 1, 'column': 11}, // :
        original:  {'line': 3, 'column': 3},
        source: srcFile
      }, {
        generated: {'line': 1, 'column': 12}, // "
        original:  {'line': 3, 'column': 5},
        source: srcFile
      }, {
        generated: {'line': 1, 'column': 13}, // b
        original:  {'line': 3, 'column': 6},
        source: srcFile
      }, {
        generated: {'line': 1, 'column': 14}, // "
        original:  {'line': 3, 'column': 7},
        source: srcFile
      }, {
        generated: {'line': 1, 'column': 15}, // }
        original:  {'line': 4, 'column': 0},
        source: srcFile
      }, {
        generated: {'line': 1, 'column': 16}, // ;
        original:  {'line': 4, 'column': 1},
        source: srcFile
      }];

  exports['test some simple stuff'] = function (assert, util) {
    var map = new SourceMapFileCollector({
      file: 'foo.js',
      sourceRoot: '.'
    });

    assert.ok(true);
  };

  exports['test generates the same mapping as SourceMapGenerator'] = function (assert, util) {
    var generatorProps = {
          file: 'min.js'
        },
        generator = new SourceMapGenerator(generatorProps);

    // Loop over the property map and add it to the SourceMapGenerator
    var i = 0,
        len = propmap.length;
    for (; i < len; i++) {
      generator.addMapping(propmap[i]);
    }

    // Collect the source map
    var genSourceMap = generator.toString();

    // Generate another source map via SourceMapFileCollector
    var fileCollector = new SourceMapFileCollector(generatorProps);

    // Add the file coordinate mapping
    fileCollector.addIndexMapping({
      src: srcFile,
      input: input,
      output: output,
      map: coordmap
    });

    // Collect the second source map
    var fileSourceMap = fileCollector.toString();

    // Debug source map differences
    console.log('');
    console.log(genSourceMap);
    console.log(fileSourceMap);
  };

});
